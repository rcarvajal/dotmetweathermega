name: Build & Deploy BlazorApp

on:
    push:
        branches: ["main"]
    
env: 
    DOTNET_VERSION: '8.0.x'
    NODE_VERSION: '22.x'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
    build:
        runs-on: ubuntu-latest
    
        steps:
            # 1. Descargar el código
            - name: Descargar código
              uses: actions/checkout@v4

            # 2. Instalar .NET
            - name: Setup -NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.DOTNET_VERSION }}

            # 3. Paquetes Nuget
            - uses: actions/cache@v3
              with:
                path: ~/.nuget/packages
                key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

            # Instalar Node
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.NODE_VERSION }}

            # Restore an publish
            - name: Publicar APP Blazor
              run: |
                dotnet restore
                # Inyectar la API Key
                echo "{\"OpenWeather\":{\"Key\":\"${{ secrets.OPENWEATHER_KEY }}\"}}" > skyCast/appsettings.Production.json
                dotnet publish skyCast/skyCast.csproj -c Release -o publish

            - name: Listar salida
              run: |
                echo "Contenido Generado"
                ls -R publish | head -n 100

            # Artifact
            - uses: actions/upload-artifact@v4
              with:
                name: publish
                path: publish

            # Despliegue
            - name: Deploy to Pages
              uses: peaceiris/actions-gh-pages@v4
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                publish_dir: SkyCast/publish/wwwroot
                force_orphan: true